; Copyright (C) 2013 Jolla Ltd.
; Contact: Islam Amer <islam.amer@jollamobile.com>
; All rights reserved.
; 
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation; either version 2
; of the License, or (at your option) any later version.
; 
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
; 
; You should have received a copy of the GNU General Public License
; along with this program; if not, write to the Free Software
; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. 

[web]
; the url prefix django will be served under
url_prefix=webhook
; where the document root for the server lives
; /var/www is default on debian
; /srv/www is default on opensuse
doc_root = /var/www/
; where the images, js and css files will be collected on running the
; appropriate django command, so that they can be statically served by the HTTP
; server
static_media_collect = %(doc_root)s%(url_prefix)s/site_media

; The sites allowed to access this service : see ALLOWED_HOSTS
;allowed_hosts = webhook.example.com

; uncomment and set this to the name of a project which will be used by default
; to create a placeholder mapping for incoming events
;default_project =

use_http_remote_user = no
; django secret key, generate one using
; django-admin generate_secret_key --settings=webhook_launcher.settings
secret_key =

; whether to make the landing page public or not
; the landing page lists all complete mappings
public_landing_page = no

; uncomment this and set it to a comma separated list of allowed domains
; from which payload is to be accepted, for example:
; service_whitelist=github.com,bitbucket.org
;service_whitelist =

; if you want to limit access to the webhook POST to only certain ips, specify
; them here. (eg github.com and merproject.org)
; post_ip_filter = 207.97.227.253, 50.57.128.197, 108.171.174.178, 50.57.231.61, 204.232.175.64/27, 192.30.252.0/22, 176.9.28.103

; Set this to yes if there is a reverse proxy and post_ip_filter is used
; we can't just trust the presence of X_FORWARDED_FOR header as an indicator
; as this could easily be spoofed.
; post_ip_filter_has_rev_proxy = yes

; If outogoing requests to bitbucket or github api need to go through 
; a proxy set the ip and port of the proxy here
; outgoing_proxy = http://proxy
; outgoing_proxy_port = 8080

[db]
; database engine to use
db_engine = sqlite3
; name of database
db_name = webhook
; database username
db_user = webhook
; database password
db_pass = webhook
; database host
db_host = localhost

[boss]
; BOSS server IP adress and credentials
; processes will be launched on that server
boss_host = 127.0.0.1
boss_user = boss
boss_pass = boss
boss_vhost = boss

[ldap]
; Whether to use LDAP authentication
use_ldap = no
; Wehther to perform a subtree search with filter for the user
; or just get the DN directly
use_search = no
; ldap server uri
ldap_server = ldaps://127.0.0.1
; Verify ldaps certificate
verify_certificate = no

; DN template used in case use_search is no
ldap_dn_template = uid=%(user)s,ou=example,dc=com

; base DN for subtree search used in case use_search is yes
ldap_base_dn = ou=people,dc=example,dc=com
; filter associated with above ldap_base_dn. Do not remove the default, modify it.
ldap_filter = (uid=%(user)s)

; attribute where user emails are stored
ldap_mail_attr = mail
; attribute where users' first names are stored
ldap_fname_attr = givenName
; attribute where users' last names are stored
ldap_lname_attr = sn
; attribute where users' emails are stored
ldap_mail_attr = mail

[processes]
; private process store, where the needed process definitions are stored
; override this location and copy the files over if you want to modify them
process_dir = /usr/share/webhook_launcher/processes
; process definition used when a commit happens
vcscommit_queue = %(process_dir)s/VCSCOMMIT_QUEUE
vcscommit_notify = %(process_dir)s/VCSCOMMIT_NOTIFY
vcscommit_build = %(process_dir)s/VCSCOMMIT_BUILD
